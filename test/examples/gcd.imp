function is_even (a : integer) return boolean is
begin
  return a % 2 == 0;
end is_even;

function gcd (a, b : integer) return integer is
  var v_a, v_b, d : integer;
begin
  v_a = a; v_b = b;
  d = 1;

  while is_even (v_a) and is_even(v_b) loop
    v_a = v_a / 2;
    v_b = v_b / 2;
    d = d * 2;
  end loop;

  while v_a # v_b loop
    if is_even (v_a) then
      v_a = v_a / 2;
    elsif is_even (v_b) then
      v_b = v_b / 2;
    elsif v_a > v_b then
      v_a = (v_a - v_b) / 2;
    else
      v_b = (v_b - v_a) / 2;
    end if;
  end loop;

  return v_a * d;
end gcd;

procedure main () is
   var a, b, c : integer;
begin
   output ("Firsr number: "); input (a);
   output ("Second number: "); input (b);
   c = gcd (a, b);
   output (c); newline;
end main;
